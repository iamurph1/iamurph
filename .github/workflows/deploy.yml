name: Deploy to Cloudflare Workers

# Trigger the workflow on pushes to the main branch. Adjust the branch name as needed.
on:
  push:
    branches: [ main ]

# Define a single job named "deploy" that will run on the latest Ubuntu runner.
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository's code so the workflow has access to the Worker files.
      - uses: actions/checkout@v4

      # Set up a Node.js environment. Wrangler is a Node.js tool, so this ensures the correct Node version is available.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Use Cloudflare's official Wrangler GitHub Action to build and deploy the Worker.
      - name: Publish with Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          # This API token must be created in the Cloudflare dashboard and stored as a GitHub secret.
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Your Cloudflare account ID, also stored as a GitHub secret.
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Directory containing the Worker code. Adjust if your Worker lives in a different folder.
          workingDirectory: './your-worker-folder'
